// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nationalHolidays.Data;

#nullable disable

namespace nationalHolidays.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FeriadoPais", b =>
                {
                    b.Property<long>("FeriadosId")
                        .HasColumnType("bigint");

                    b.Property<long>("PaisesId")
                        .HasColumnType("bigint");

                    b.HasKey("FeriadosId", "PaisesId");

                    b.HasIndex("PaisesId");

                    b.ToTable("FeriadoPais");
                });

            modelBuilder.Entity("nationalHolidays.Model.Feriado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("Ano")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Feriados");
                });

            modelBuilder.Entity("nationalHolidays.Model.Localidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("localidades");
                });

            modelBuilder.Entity("nationalHolidays.Model.Regiao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regioes");
                });

            modelBuilder.Entity("nationalHolidays.Model.Continente", b =>
                {
                    b.HasBaseType("nationalHolidays.Model.Localidade");

                    b.Property<long>("RegiaoId")
                        .HasColumnType("bigint");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Continente");
                });

            modelBuilder.Entity("nationalHolidays.Model.Pais", b =>
                {
                    b.HasBaseType("nationalHolidays.Model.Localidade");

                    b.Property<long>("ContinenteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ContinenteId");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("FeriadoPais", b =>
                {
                    b.HasOne("nationalHolidays.Model.Feriado", null)
                        .WithMany()
                        .HasForeignKey("FeriadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nationalHolidays.Model.Pais", null)
                        .WithMany()
                        .HasForeignKey("PaisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nationalHolidays.Model.Continente", b =>
                {
                    b.HasOne("nationalHolidays.Model.Localidade", null)
                        .WithOne()
                        .HasForeignKey("nationalHolidays.Model.Continente", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("nationalHolidays.Model.Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("nationalHolidays.Model.Pais", b =>
                {
                    b.HasOne("nationalHolidays.Model.Continente", "Continente")
                        .WithMany()
                        .HasForeignKey("ContinenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nationalHolidays.Model.Localidade", null)
                        .WithOne()
                        .HasForeignKey("nationalHolidays.Model.Pais", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Continente");
                });
#pragma warning restore 612, 618
        }
    }
}
